from pyrogram import Client, filters
from pyrogram.types import Message
from bot import Bot
from config import ADMINS, USER_REPLY_TEXT, PICS
from database.database import add_banned_user, remove_banned_user, get_ban_status
from helper_func import send_ban_log, check_user_ban
import random
import asyncio

# Handler for unauthorized access
@Bot.on_message(filters.command(["ban", "unban"]) & ~filters.user(ADMINS))
async def unauthorized_command(client: Bot, message: Message):
    """Handle unauthorized access to admin commands"""
    try:
        # Send reaction if possible
        # try:
        #     await message.react("üö´", big=True)
        # except:
        #     pass
            
        # Reply with custom message and random image
        await message.reply_text(
            text=USER_REPLY_TEXT,
            quote=True
        )
        
        # Delete the command message if possible
        try:
            await asyncio.sleep(1)
            await message.delete()
        except:
            pass
            
    except Exception as e:
        print(f"Error in unauthorized handler: {e}")

@Bot.on_message(filters.command("ban") & filters.user(ADMINS))
@check_user_ban
async def ban_user(client: Bot, message: Message):
    try:
        # Get command parts
        parts = message.text.split()
        
        # Check command format
        if len(parts) < 2:
            await message.reply_text(
                "<b>‚ùñ Us·¥Ä…¢·¥á:</b> / ô·¥Ä…¥ ·¥ús·¥á Ä_…™·¥Ö  Ä·¥á·¥Äs·¥è…¥\n"
                "<b>‚Ä¢ Ex·¥Ä·¥ç·¥ò ü·¥á:</b> / ô·¥Ä…¥ 1234567890 S·¥ò·¥Ä·¥ç·¥ç…™…¥…¢"
            )
            return
        
        # Get user_id and reason
        try:
            user_id = int(parts[1])
            reason = " ".join(parts[2:]) if len(parts) > 2 else "<i>N·¥è  Ä·¥á·¥Äs·¥è…¥ ·¥ò Ä·¥è·¥†…™·¥Ö·¥á·¥Ö</i>"
        except ValueError:
            await message.reply_text("<b>„ÉÉ P ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä ID!</b>")
            return
        
        # Check if user is already banned
        ban_status = await get_ban_status(user_id)
        if ban_status:
            await message.reply_text(
                f"<blockquote expandable><b><i>‚òô Us·¥á Ä …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ô·¥Ä…¥…¥·¥á·¥Ö</i>\n\n"
                f"Us·¥á Ä ID:<code> {user_id}</code>\n"
                f"R·¥á·¥Äs·¥è…¥: {ban_status['ban_reason']}\n"
                f"B·¥Ä…¥…¥·¥á·¥Ö O…¥: {ban_status['banned_on'].strftime('%Y-%m-%d %H:%M:%S')}\n"
                f"B·¥Ä…¥…¥·¥á·¥Ö B è: {ban_status['banned_by']}</b></blockquote>"
            )
            return
        
        # Ban user
        await add_banned_user(user_id, message.from_user.id, reason)
        
        # Try to get user info
        try:
            user = await client.get_users(user_id)
            user_mention = user.mention
        except:
            user_mention = f"Us·¥á Ä {user_id}"
        
        # Send confirmation
        await message.reply_text(
            f"<blockquote expandable><b><i>‚òô S·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è B·¥Ä…¥…¥·¥á·¥Ö Us·¥á Ä</i>\n\n"
            f"Us·¥á Ä:<code> {user_mention}</code>\n"
            f"Us·¥á Ä ID: <code>{user_id}</code>\n"
            f"R·¥á·¥Äs·¥è…¥: {reason}</b></blockquote>"
        )
        
        # Notify user
        try:
            await client.send_message(
                user_id,
                f"‚ùùY·¥è·¥ú  ú·¥Ä·¥†·¥á  ô·¥á·¥á…¥  ô·¥Ä…¥…¥·¥á·¥Ö\n\nR·¥á·¥Äs·¥è…¥:\n<blockquote>{reason}</blockquote>\n\nC·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥Ä·¥Ö·¥ç…™…¥s ·¥è Ä /“ì·¥á·¥á·¥Ö ô·¥Ä·¥Ñ·¥ã “ì·¥è Ä ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥‚ùû"
            )
        except:
            pass

        # Send ban log
        await send_ban_log(client, user_id, message.from_user.id, reason, "banned")

    except Exception as e:
        await message.reply_text(f"An error occurred: {str(e)}")

@Bot.on_message(filters.command("unban") & filters.user(ADMINS))
@check_user_ban
async def unban_user(client: Bot, message: Message):
    try:
        # Get command parts
        parts = message.text.split()
        
        # Check command format
        if len(parts) != 2:
            await message.reply_text(
                "<b>‚ùñ Us·¥Ä…¢·¥á:</b> /U…¥ ô·¥Ä…¥ ·¥ús·¥á Ä_…™·¥Ö  Ä·¥á·¥Äs·¥è…¥\n"
                "<b>‚Ä¢ Ex·¥Ä·¥ç·¥ò ü·¥á:</b> /U…¥ ô·¥Ä…¥ 1234567890 S·¥ò·¥Ä·¥ç·¥ç…™…¥…¢"
            )
            return
        
        # Get user_id
        try:
            user_id = int(parts[1])
        except ValueError:
            await message.reply_text("<b>„ÉÉ P ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä ID!</b>")
            return
        
        # Check if user is banned
        ban_status = await get_ban_status(user_id)
        if not ban_status:
            await message.reply_text(f"‚òô Us·¥á Ä<code> {user_id}</code> …™s …¥·¥è·¥õ  ô·¥Ä…¥…¥·¥á·¥Ö!")
            return
        
        # Unban user
        await remove_banned_user(user_id, message.from_user.id)
        
        # Try to get user info
        try:
            user = await client.get_users(user_id)
            user_mention = user.mention
        except:
            user_mention = f"Us·¥á Ä {user_id}"
        
        # Send confirmation
        await message.reply_text(
            f"<blockquote expandable><b><i>S·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è U…¥ ô·¥Ä…¥…¥·¥á·¥Ö Us·¥á Ä</i?\n\n"
            f"Us·¥á Ä: {user_mention}\n"
            f"Us·¥á Ä ID: <code>{user_id}</code></b></blockquote>"
        )
        
        # Notify user
        try:
            await client.send_message(
                user_id,
                "‚ùùY·¥è·¥ú  ú·¥Ä·¥†·¥á  ô·¥á·¥á…¥ ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö. Y·¥è·¥ú ·¥Ñ·¥Ä…¥ …¥·¥è·¥° ·¥ús·¥á ·¥õ ú·¥á  ô·¥è·¥õ.‚ùû"
            )
        except:
            pass

        # Send ban log
        await send_ban_log(client, user_id, message.from_user.id, action="unbanned")

    except Exception as e:
        await message.reply_text(f"An error occurred: {str(e)}")

# Add this check at the start of your command handlers
async def check_ban_status(message: Message):
    """Check if user is banned"""
    if message.from_user.id in ADMINS:
        return False
        
    ban_status = await get_ban_status(message.from_user.id)
    if ban_status:
        await message.reply_text(
            f"<b><i>‚ò£ Y·¥è·¥ú ·¥Ä Ä·¥á  ô·¥Ä…¥…¥·¥á·¥Ö “ì Ä·¥è·¥ç ·¥ús…™…¥…¢ ·¥õ ú…™s  ô·¥è·¥õ</i></b>\n\n"
            f"<blockquote>R·¥á·¥Äs·¥è…¥: {ban_status['ban_reason']}\n"
            f"B·¥Ä…¥…¥·¥á·¥Ö O…¥: {ban_status['banned_on'].strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ A·¥Ö·¥ç…™…¥ @Anime106_Request_bot ·¥è Ä /feedback </blockquote>"

        )
        return True
    return False 